// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheMerchShop.DataAccess;

#nullable disable

namespace TheMerchShop.Migrations
{
    [DbContext(typeof(MerchShopContext))]
    partial class MerchShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheMerchShop.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            CustomerID = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith"
                        },
                        new
                        {
                            CustomerID = 3,
                            Email = "emily.jones@example.com",
                            FirstName = "Emily",
                            LastName = "Jones"
                        },
                        new
                        {
                            CustomerID = 4,
                            Email = "michael.brown@example.com",
                            FirstName = "Michael",
                            LastName = "Brown"
                        },
                        new
                        {
                            CustomerID = 5,
                            Email = "chris.davis@example.com",
                            FirstName = "Chris",
                            LastName = "Davis"
                        },
                        new
                        {
                            CustomerID = 6,
                            Email = "jessica.wilson@example.com",
                            FirstName = "Jessica",
                            LastName = "Wilson"
                        },
                        new
                        {
                            CustomerID = 7,
                            Email = "david.martinez@example.com",
                            FirstName = "David",
                            LastName = "Martinez"
                        },
                        new
                        {
                            CustomerID = 8,
                            Email = "sarah.miller@example.com",
                            FirstName = "Sarah",
                            LastName = "Miller"
                        },
                        new
                        {
                            CustomerID = 9,
                            Email = "james.taylor@example.com",
                            FirstName = "James",
                            LastName = "Taylor"
                        },
                        new
                        {
                            CustomerID = 10,
                            Email = "linda.anderson@example.com",
                            FirstName = "Linda",
                            LastName = "Anderson"
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<int>("MerchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseID")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("MerchID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            MerchID = 1,
                            PurchaseDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 299.99m,
                            Quantity = 150,
                            SalePrice = 349.99m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryId = 2,
                            MerchID = 2,
                            PurchaseDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 499.99m,
                            Quantity = 120,
                            SalePrice = 549.99m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryId = 3,
                            MerchID = 3,
                            PurchaseDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 199.99m,
                            Quantity = 100,
                            SalePrice = 249.99m,
                            WarehouseID = 2
                        },
                        new
                        {
                            InventoryId = 4,
                            MerchID = 4,
                            PurchaseDate = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 99.99m,
                            Quantity = 90,
                            SalePrice = 149.99m,
                            WarehouseID = 2
                        },
                        new
                        {
                            InventoryId = 5,
                            MerchID = 5,
                            PurchaseDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 19.99m,
                            Quantity = 200,
                            SalePrice = 29.99m,
                            WarehouseID = 3
                        },
                        new
                        {
                            InventoryId = 6,
                            MerchID = 6,
                            PurchaseDate = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 29.99m,
                            Quantity = 180,
                            SalePrice = 39.99m,
                            WarehouseID = 3
                        },
                        new
                        {
                            InventoryId = 7,
                            MerchID = 7,
                            PurchaseDate = new DateTime(2023, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 15.99m,
                            Quantity = 160,
                            SalePrice = 19.99m,
                            WarehouseID = 4
                        },
                        new
                        {
                            InventoryId = 8,
                            MerchID = 8,
                            PurchaseDate = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 10.99m,
                            Quantity = 140,
                            SalePrice = 14.99m,
                            WarehouseID = 4
                        },
                        new
                        {
                            InventoryId = 9,
                            MerchID = 9,
                            PurchaseDate = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 499.99m,
                            Quantity = 130,
                            SalePrice = 599.99m,
                            WarehouseID = 5
                        },
                        new
                        {
                            InventoryId = 10,
                            MerchID = 10,
                            PurchaseDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 699.99m,
                            Quantity = 110,
                            SalePrice = 799.99m,
                            WarehouseID = 5
                        },
                        new
                        {
                            InventoryId = 11,
                            MerchID = 11,
                            PurchaseDate = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 249.99m,
                            Quantity = 105,
                            SalePrice = 299.99m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryId = 12,
                            MerchID = 12,
                            PurchaseDate = new DateTime(2023, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 349.99m,
                            Quantity = 95,
                            SalePrice = 399.99m,
                            WarehouseID = 2
                        },
                        new
                        {
                            InventoryId = 13,
                            MerchID = 13,
                            PurchaseDate = new DateTime(2023, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 150.99m,
                            Quantity = 85,
                            SalePrice = 200.99m,
                            WarehouseID = 3
                        },
                        new
                        {
                            InventoryId = 14,
                            MerchID = 14,
                            PurchaseDate = new DateTime(2023, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 75.99m,
                            Quantity = 75,
                            SalePrice = 95.99m,
                            WarehouseID = 4
                        },
                        new
                        {
                            InventoryId = 15,
                            MerchID = 15,
                            PurchaseDate = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 225.99m,
                            Quantity = 65,
                            SalePrice = 275.99m,
                            WarehouseID = 5
                        },
                        new
                        {
                            InventoryId = 16,
                            MerchID = 16,
                            PurchaseDate = new DateTime(2023, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 125.99m,
                            Quantity = 55,
                            SalePrice = 165.99m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryId = 17,
                            MerchID = 17,
                            PurchaseDate = new DateTime(2023, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 45.99m,
                            Quantity = 45,
                            SalePrice = 55.99m,
                            WarehouseID = 2
                        },
                        new
                        {
                            InventoryId = 18,
                            MerchID = 18,
                            PurchaseDate = new DateTime(2023, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 30.99m,
                            Quantity = 35,
                            SalePrice = 40.99m,
                            WarehouseID = 3
                        },
                        new
                        {
                            InventoryId = 19,
                            MerchID = 19,
                            PurchaseDate = new DateTime(2023, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 500.99m,
                            Quantity = 25,
                            SalePrice = 600.99m,
                            WarehouseID = 4
                        },
                        new
                        {
                            InventoryId = 20,
                            MerchID = 20,
                            PurchaseDate = new DateTime(2023, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 700.99m,
                            Quantity = 15,
                            SalePrice = 800.99m,
                            WarehouseID = 5
                        },
                        new
                        {
                            InventoryId = 21,
                            MerchID = 21,
                            PurchaseDate = new DateTime(2023, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 250.00m,
                            Quantity = 120,
                            SalePrice = 300.00m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryId = 22,
                            MerchID = 22,
                            PurchaseDate = new DateTime(2023, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 60.00m,
                            Quantity = 110,
                            SalePrice = 80.00m,
                            WarehouseID = 2
                        },
                        new
                        {
                            InventoryId = 23,
                            MerchID = 23,
                            PurchaseDate = new DateTime(2023, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 45.00m,
                            Quantity = 100,
                            SalePrice = 55.00m,
                            WarehouseID = 3
                        },
                        new
                        {
                            InventoryId = 24,
                            MerchID = 24,
                            PurchaseDate = new DateTime(2023, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 12.00m,
                            Quantity = 90,
                            SalePrice = 18.00m,
                            WarehouseID = 4
                        },
                        new
                        {
                            InventoryId = 25,
                            MerchID = 25,
                            PurchaseDate = new DateTime(2023, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 320.00m,
                            Quantity = 80,
                            SalePrice = 370.00m,
                            WarehouseID = 5
                        },
                        new
                        {
                            InventoryId = 26,
                            MerchID = 26,
                            PurchaseDate = new DateTime(2023, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 215.00m,
                            Quantity = 70,
                            SalePrice = 265.00m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryId = 27,
                            MerchID = 27,
                            PurchaseDate = new DateTime(2023, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 190.00m,
                            Quantity = 60,
                            SalePrice = 240.00m,
                            WarehouseID = 2
                        },
                        new
                        {
                            InventoryId = 28,
                            MerchID = 28,
                            PurchaseDate = new DateTime(2023, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 300.00m,
                            Quantity = 50,
                            SalePrice = 350.00m,
                            WarehouseID = 3
                        },
                        new
                        {
                            InventoryId = 29,
                            MerchID = 29,
                            PurchaseDate = new DateTime(2023, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 25.00m,
                            Quantity = 40,
                            SalePrice = 30.00m,
                            WarehouseID = 4
                        },
                        new
                        {
                            InventoryId = 30,
                            MerchID = 30,
                            PurchaseDate = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 400.00m,
                            Quantity = 30,
                            SalePrice = 450.00m,
                            WarehouseID = 5
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.Merch", b =>
                {
                    b.Property<int>("MerchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MerchID"));

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("MerchID");

                    b.HasIndex("VendorID");

                    b.ToTable("Merch");

                    b.HasData(
                        new
                        {
                            MerchID = 1,
                            ItemDescription = "Latest model with high performance.",
                            ItemName = "Smartphone",
                            Rating = 4.5f,
                            Type = "Electronics",
                            VendorID = 1
                        },
                        new
                        {
                            MerchID = 2,
                            ItemDescription = "Lightweight and powerful, perfect for work and play.",
                            ItemName = "Laptop",
                            Rating = 4.7f,
                            Type = "Electronics",
                            VendorID = 1
                        },
                        new
                        {
                            MerchID = 3,
                            ItemDescription = "Efficient and easy to use microwave oven.",
                            ItemName = "Microwave Oven",
                            Rating = 4.4f,
                            Type = "Home Appliances",
                            VendorID = 2
                        },
                        new
                        {
                            MerchID = 4,
                            ItemDescription = "High-speed blender for your kitchen needs.",
                            ItemName = "Blender",
                            Rating = 4.6f,
                            Type = "Home Appliances",
                            VendorID = 2
                        },
                        new
                        {
                            MerchID = 5,
                            ItemDescription = "Comfortable and stylish T-shirt.",
                            ItemName = "T-Shirt",
                            Rating = 4.8f,
                            Type = "Fashion",
                            VendorID = 3
                        },
                        new
                        {
                            MerchID = 6,
                            ItemDescription = "Durable and fashionable jeans.",
                            ItemName = "Jeans",
                            Rating = 4.9f,
                            Type = "Fashion",
                            VendorID = 3
                        },
                        new
                        {
                            MerchID = 7,
                            ItemDescription = "Exciting Sci-Fi novel with thrilling adventures.",
                            ItemName = "Sci-Fi Novel",
                            Rating = 4.5f,
                            Type = "Books",
                            VendorID = 4
                        },
                        new
                        {
                            MerchID = 8,
                            ItemDescription = "Recipes from around the world.",
                            ItemName = "Cookbook",
                            Rating = 4.3f,
                            Type = "Books",
                            VendorID = 4
                        },
                        new
                        {
                            MerchID = 9,
                            ItemDescription = "Spacious and easy-to-set-up tent.",
                            ItemName = "Tent",
                            Rating = 4.7f,
                            Type = "Outdoor",
                            VendorID = 5
                        },
                        new
                        {
                            MerchID = 10,
                            ItemDescription = "Warm and comfortable sleeping bag.",
                            ItemName = "Sleeping Bag",
                            Rating = 4.6f,
                            Type = "Outdoor",
                            VendorID = 5
                        },
                        new
                        {
                            MerchID = 11,
                            ItemDescription = "Wireless earbuds with excellent sound quality.",
                            ItemName = "Earbuds",
                            Rating = 4.5f,
                            Type = "Electronics",
                            VendorID = 6
                        },
                        new
                        {
                            MerchID = 12,
                            ItemDescription = "E-reader for all your books in one place.",
                            ItemName = "E-Reader",
                            Rating = 4.8f,
                            Type = "Electronics",
                            VendorID = 6
                        },
                        new
                        {
                            MerchID = 13,
                            ItemDescription = "Fast boiling electric kettle.",
                            ItemName = "Electric Kettle",
                            Rating = 4.7f,
                            Type = "Home Appliances",
                            VendorID = 7
                        },
                        new
                        {
                            MerchID = 14,
                            ItemDescription = "Efficient and multi-functional toaster.",
                            ItemName = "Toaster",
                            Rating = 4.5f,
                            Type = "Home Appliances",
                            VendorID = 7
                        },
                        new
                        {
                            MerchID = 15,
                            ItemDescription = "Comfortable and stylish sneakers.",
                            ItemName = "Sneakers",
                            Rating = 4.9f,
                            Type = "Fashion",
                            VendorID = 8
                        },
                        new
                        {
                            MerchID = 16,
                            ItemDescription = "Durable backpack for all your needs.",
                            ItemName = "Backpack",
                            Rating = 4.8f,
                            Type = "Fashion",
                            VendorID = 8
                        },
                        new
                        {
                            MerchID = 17,
                            ItemDescription = "Gripping mystery novel that keeps you guessing.",
                            ItemName = "Mystery Novel",
                            Rating = 4.6f,
                            Type = "Books",
                            VendorID = 9
                        },
                        new
                        {
                            MerchID = 18,
                            ItemDescription = "Fascinating historical fiction novel.",
                            ItemName = "Historical Fiction",
                            Rating = 4.7f,
                            Type = "Books",
                            VendorID = 9
                        },
                        new
                        {
                            MerchID = 19,
                            ItemDescription = "Rugged and comfortable hiking boots.",
                            ItemName = "Hiking Boots",
                            Rating = 4.8f,
                            Type = "Outdoor",
                            VendorID = 10
                        },
                        new
                        {
                            MerchID = 20,
                            ItemDescription = "Portable and easy-to-use camping stove.",
                            ItemName = "Camping Stove",
                            Rating = 4.5f,
                            Type = "Outdoor",
                            VendorID = 10
                        },
                        new
                        {
                            MerchID = 21,
                            ItemDescription = "High-resolution screen and long battery life.",
                            ItemName = "Tablet",
                            Rating = 4.6f,
                            Type = "Electronics",
                            VendorID = 1
                        },
                        new
                        {
                            MerchID = 22,
                            ItemDescription = "Powerful and lightweight vacuum cleaner.",
                            ItemName = "Vacuum Cleaner",
                            Rating = 4.5f,
                            Type = "Home Appliances",
                            VendorID = 2
                        },
                        new
                        {
                            MerchID = 23,
                            ItemDescription = "Elegant and comfortable dress.",
                            ItemName = "Dress",
                            Rating = 4.7f,
                            Type = "Fashion",
                            VendorID = 3
                        },
                        new
                        {
                            MerchID = 24,
                            ItemDescription = "Epic fantasy novel with a captivating world.",
                            ItemName = "Fantasy Novel",
                            Rating = 4.8f,
                            Type = "Books",
                            VendorID = 4
                        },
                        new
                        {
                            MerchID = 25,
                            ItemDescription = "Bright and durable flashlight.",
                            ItemName = "Flashlight",
                            Rating = 4.6f,
                            Type = "Outdoor",
                            VendorID = 5
                        },
                        new
                        {
                            MerchID = 26,
                            ItemDescription = "High-quality camera for photography enthusiasts.",
                            ItemName = "Camera",
                            Rating = 4.7f,
                            Type = "Electronics",
                            VendorID = 6
                        },
                        new
                        {
                            MerchID = 27,
                            ItemDescription = "Healthy cooking with less oil.",
                            ItemName = "Air Fryer",
                            Rating = 4.5f,
                            Type = "Home Appliances",
                            VendorID = 7
                        },
                        new
                        {
                            MerchID = 28,
                            ItemDescription = "Stylish hat suitable for all seasons.",
                            ItemName = "Hat",
                            Rating = 4.8f,
                            Type = "Fashion",
                            VendorID = 8
                        },
                        new
                        {
                            MerchID = 29,
                            ItemDescription = "Inspirational self-help book for personal growth.",
                            ItemName = "Self-help Book",
                            Rating = 4.9f,
                            Type = "Books",
                            VendorID = 9
                        },
                        new
                        {
                            MerchID = 30,
                            ItemDescription = "Insulated water bottle to keep drinks at the right temperature.",
                            ItemName = "Water Bottle",
                            Rating = 4.7f,
                            Type = "Outdoor",
                            VendorID = 10
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.MerchReview", b =>
                {
                    b.Property<int>("MerchReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MerchReviewID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MerchID")
                        .HasColumnType("int");

                    b.Property<int>("ReviewScore")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MerchReviewID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("MerchID");

                    b.ToTable("MerchReviews");

                    b.HasData(
                        new
                        {
                            MerchReviewID = 1,
                            CustomerID = 1,
                            Date = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 1,
                            ReviewScore = 5,
                            ReviewText = "Incredible performance and battery life!"
                        },
                        new
                        {
                            MerchReviewID = 2,
                            CustomerID = 2,
                            Date = new DateTime(2023, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 2,
                            ReviewScore = 4,
                            ReviewText = "Great laptop, but a bit pricey."
                        },
                        new
                        {
                            MerchReviewID = 3,
                            CustomerID = 3,
                            Date = new DateTime(2023, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 3,
                            ReviewScore = 4,
                            ReviewText = "Heats quickly, very efficient."
                        },
                        new
                        {
                            MerchReviewID = 4,
                            CustomerID = 4,
                            Date = new DateTime(2023, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 4,
                            ReviewScore = 3,
                            ReviewText = "Good but not the best on the market."
                        },
                        new
                        {
                            MerchReviewID = 5,
                            CustomerID = 5,
                            Date = new DateTime(2023, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 5,
                            ReviewScore = 5,
                            ReviewText = "Love the design and feel!"
                        },
                        new
                        {
                            MerchReviewID = 6,
                            CustomerID = 6,
                            Date = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 6,
                            ReviewScore = 5,
                            ReviewText = "Very comfortable and durable."
                        },
                        new
                        {
                            MerchReviewID = 7,
                            CustomerID = 7,
                            Date = new DateTime(2023, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 7,
                            ReviewScore = 4,
                            ReviewText = "Captivating story, couldn't put it down!"
                        },
                        new
                        {
                            MerchReviewID = 8,
                            CustomerID = 8,
                            Date = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 8,
                            ReviewScore = 3,
                            ReviewText = "Useful, but lacks some features."
                        },
                        new
                        {
                            MerchReviewID = 9,
                            CustomerID = 9,
                            Date = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 9,
                            ReviewScore = 5,
                            ReviewText = "Perfect for my camping trips!"
                        },
                        new
                        {
                            MerchReviewID = 10,
                            CustomerID = 10,
                            Date = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MerchID = 10,
                            ReviewScore = 4,
                            ReviewText = "Good quality, but a bit overpriced."
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CustomerID = 1,
                            Date = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 299.99m
                        },
                        new
                        {
                            OrderID = 2,
                            CustomerID = 2,
                            Date = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 549.99m
                        },
                        new
                        {
                            OrderID = 3,
                            CustomerID = 3,
                            Date = new DateTime(2023, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 249.99m
                        },
                        new
                        {
                            OrderID = 4,
                            CustomerID = 4,
                            Date = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 149.99m
                        },
                        new
                        {
                            OrderID = 5,
                            CustomerID = 5,
                            Date = new DateTime(2023, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 29.99m
                        },
                        new
                        {
                            OrderID = 6,
                            CustomerID = 6,
                            Date = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 39.99m
                        },
                        new
                        {
                            OrderID = 7,
                            CustomerID = 7,
                            Date = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 19.99m
                        },
                        new
                        {
                            OrderID = 8,
                            CustomerID = 8,
                            Date = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 14.99m
                        },
                        new
                        {
                            OrderID = 9,
                            CustomerID = 9,
                            Date = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 599.99m
                        },
                        new
                        {
                            OrderID = 10,
                            CustomerID = 10,
                            Date = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 799.99m
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<int>("MerchID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("MerchID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailID = 1,
                            MerchID = 1,
                            OrderID = 1,
                            Price = 299.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 2,
                            MerchID = 2,
                            OrderID = 1,
                            Price = 549.99m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 3,
                            MerchID = 3,
                            OrderID = 2,
                            Price = 249.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 4,
                            MerchID = 4,
                            OrderID = 3,
                            Price = 149.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 5,
                            MerchID = 5,
                            OrderID = 4,
                            Price = 29.99m,
                            Quantity = 3
                        },
                        new
                        {
                            OrderDetailID = 6,
                            MerchID = 6,
                            OrderID = 5,
                            Price = 39.99m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 7,
                            MerchID = 7,
                            OrderID = 6,
                            Price = 19.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 8,
                            MerchID = 8,
                            OrderID = 7,
                            Price = 14.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 9,
                            MerchID = 9,
                            OrderID = 8,
                            Price = 599.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 10,
                            MerchID = 10,
                            OrderID = 9,
                            Price = 799.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 11,
                            MerchID = 11,
                            OrderID = 10,
                            Price = 250.00m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 12,
                            MerchID = 12,
                            OrderID = 10,
                            Price = 350.00m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 13,
                            MerchID = 13,
                            OrderID = 2,
                            Price = 150.00m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 14,
                            MerchID = 14,
                            OrderID = 3,
                            Price = 75.00m,
                            Quantity = 3
                        },
                        new
                        {
                            OrderDetailID = 15,
                            MerchID = 15,
                            OrderID = 4,
                            Price = 225.00m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 16,
                            MerchID = 16,
                            OrderID = 5,
                            Price = 125.00m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 17,
                            MerchID = 17,
                            OrderID = 6,
                            Price = 45.00m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 18,
                            MerchID = 18,
                            OrderID = 7,
                            Price = 30.00m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 19,
                            MerchID = 19,
                            OrderID = 8,
                            Price = 500.00m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 20,
                            MerchID = 20,
                            OrderID = 9,
                            Price = 700.00m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.Variant", b =>
                {
                    b.Property<int>("VariantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VariantID"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MerchID")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VariantID");

                    b.HasIndex("MerchID");

                    b.ToTable("Variants");

                    b.HasData(
                        new
                        {
                            VariantID = 1,
                            Color = "Black",
                            MerchID = 1,
                            Size = "64GB"
                        },
                        new
                        {
                            VariantID = 2,
                            Color = "White",
                            MerchID = 1,
                            Size = "128GB"
                        },
                        new
                        {
                            VariantID = 3,
                            Color = "Silver",
                            MerchID = 2,
                            Size = "256GB"
                        },
                        new
                        {
                            VariantID = 4,
                            Color = "Blue",
                            MerchID = 5,
                            Size = "M"
                        },
                        new
                        {
                            VariantID = 5,
                            Color = "Green",
                            MerchID = 5,
                            Size = "L"
                        },
                        new
                        {
                            VariantID = 6,
                            Color = "Black",
                            MerchID = 6,
                            Size = "32"
                        },
                        new
                        {
                            VariantID = 7,
                            Color = "Blue",
                            MerchID = 6,
                            Size = "34"
                        },
                        new
                        {
                            VariantID = 8,
                            Color = "Red",
                            MerchID = 20,
                            Size = "One Size"
                        },
                        new
                        {
                            VariantID = 9,
                            Color = "Black",
                            MerchID = 25,
                            Size = "One Size"
                        },
                        new
                        {
                            VariantID = 10,
                            Color = "Blue",
                            MerchID = 30,
                            Size = "One Size"
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OverallRating")
                        .HasColumnType("real");

                    b.Property<string>("WebURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorID");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            VendorID = 1,
                            Name = "Global Tech",
                            OverallRating = 4.5f,
                            WebURL = "http://globaltech.com"
                        },
                        new
                        {
                            VendorID = 2,
                            Name = "Innovative Solutions",
                            OverallRating = 4.7f,
                            WebURL = "http://innovativesolutions.com"
                        },
                        new
                        {
                            VendorID = 3,
                            Name = "Eco Friendly Merch",
                            OverallRating = 4.8f,
                            WebURL = "http://ecofriendlymerch.com"
                        },
                        new
                        {
                            VendorID = 4,
                            Name = "Tech Pioneers",
                            OverallRating = 4.6f,
                            WebURL = "http://techpioneers.com"
                        },
                        new
                        {
                            VendorID = 5,
                            Name = "Home Essentials Inc.",
                            OverallRating = 4.4f,
                            WebURL = "http://homeessentialsinc.com"
                        },
                        new
                        {
                            VendorID = 6,
                            Name = "Fashion Forward",
                            OverallRating = 4.9f,
                            WebURL = "http://fashionforward.com"
                        },
                        new
                        {
                            VendorID = 7,
                            Name = "Gadget Gurus",
                            OverallRating = 4.3f,
                            WebURL = "http://gadgetgurus.com"
                        },
                        new
                        {
                            VendorID = 8,
                            Name = "Outdoor Adventures Gear",
                            OverallRating = 4.7f,
                            WebURL = "http://outdooradventuresgear.com"
                        },
                        new
                        {
                            VendorID = 9,
                            Name = "Kitchen Kings",
                            OverallRating = 4.2f,
                            WebURL = "http://kitchenkings.com"
                        },
                        new
                        {
                            VendorID = 10,
                            Name = "Beauty and Beyond",
                            OverallRating = 4.8f,
                            WebURL = "http://beautyandbeyond.com"
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.VendorReview", b =>
                {
                    b.Property<int>("VendorReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorReviewID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewScore")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("VendorReviewID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("VendorID");

                    b.ToTable("VendorReviews");

                    b.HasData(
                        new
                        {
                            VendorReviewID = 1,
                            CustomerID = 1,
                            Date = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Outstanding service and product quality!",
                            VendorID = 1
                        },
                        new
                        {
                            VendorReviewID = 2,
                            CustomerID = 2,
                            Date = new DateTime(2023, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "Very good overall, though shipping was slower than expected.",
                            VendorID = 2
                        },
                        new
                        {
                            VendorReviewID = 3,
                            CustomerID = 3,
                            Date = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Amazing selection of fashion items!",
                            VendorID = 3
                        },
                        new
                        {
                            VendorReviewID = 4,
                            CustomerID = 4,
                            Date = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Books arrived quickly and in perfect condition.",
                            VendorID = 4
                        },
                        new
                        {
                            VendorReviewID = 5,
                            CustomerID = 5,
                            Date = new DateTime(2023, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "Great products but customer service could be improved.",
                            VendorID = 5
                        },
                        new
                        {
                            VendorReviewID = 6,
                            CustomerID = 6,
                            Date = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "The electronics are top-notch and reasonably priced.",
                            VendorID = 6
                        },
                        new
                        {
                            VendorReviewID = 7,
                            CustomerID = 7,
                            Date = new DateTime(2023, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 3,
                            ReviewText = "Decent quality, but I had issues with my order.",
                            VendorID = 7
                        },
                        new
                        {
                            VendorReviewID = 8,
                            CustomerID = 8,
                            Date = new DateTime(2023, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "Good value for the money, will shop again.",
                            VendorID = 8
                        },
                        new
                        {
                            VendorReviewID = 9,
                            CustomerID = 9,
                            Date = new DateTime(2023, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Fantastic customer support and fast delivery.",
                            VendorID = 9
                        },
                        new
                        {
                            VendorReviewID = 10,
                            CustomerID = 10,
                            Date = new DateTime(2023, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "Products are great, but the website is a bit clunky.",
                            VendorID = 10
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseID"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseID");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseID = 1,
                            Location = "North Warehouse, 1234 North St, City A"
                        },
                        new
                        {
                            WarehouseID = 2,
                            Location = "South Warehouse, 5678 South Rd, City B"
                        },
                        new
                        {
                            WarehouseID = 3,
                            Location = "East Warehouse, 91011 East Ave, City C"
                        },
                        new
                        {
                            WarehouseID = 4,
                            Location = "West Warehouse, 121314 West Ln, City D"
                        },
                        new
                        {
                            WarehouseID = 5,
                            Location = "Central Warehouse, 151617 Central Blvd, City E"
                        });
                });

            modelBuilder.Entity("TheMerchShop.Models.Inventory", b =>
                {
                    b.HasOne("TheMerchShop.Models.Merch", "Merch")
                        .WithMany("Inventories")
                        .HasForeignKey("MerchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheMerchShop.Models.Warehouse", "Warehouse")
                        .WithMany("Inventories")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merch");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("TheMerchShop.Models.Merch", b =>
                {
                    b.HasOne("TheMerchShop.Models.Vendor", "Vendor")
                        .WithMany("Merchandise")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("TheMerchShop.Models.MerchReview", b =>
                {
                    b.HasOne("TheMerchShop.Models.Customer", "Customer")
                        .WithMany("MerchReviews")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheMerchShop.Models.Merch", "Merch")
                        .WithMany("MerchReviews")
                        .HasForeignKey("MerchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Merch");
                });

            modelBuilder.Entity("TheMerchShop.Models.Order", b =>
                {
                    b.HasOne("TheMerchShop.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TheMerchShop.Models.OrderDetail", b =>
                {
                    b.HasOne("TheMerchShop.Models.Merch", "Merch")
                        .WithMany()
                        .HasForeignKey("MerchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheMerchShop.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merch");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TheMerchShop.Models.Variant", b =>
                {
                    b.HasOne("TheMerchShop.Models.Merch", "Merch")
                        .WithMany("Variants")
                        .HasForeignKey("MerchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merch");
                });

            modelBuilder.Entity("TheMerchShop.Models.VendorReview", b =>
                {
                    b.HasOne("TheMerchShop.Models.Customer", "Customer")
                        .WithMany("VendorReviews")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheMerchShop.Models.Vendor", "Vendor")
                        .WithMany("VendorReviews")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("TheMerchShop.Models.Customer", b =>
                {
                    b.Navigation("MerchReviews");

                    b.Navigation("Orders");

                    b.Navigation("VendorReviews");
                });

            modelBuilder.Entity("TheMerchShop.Models.Merch", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("MerchReviews");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("TheMerchShop.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("TheMerchShop.Models.Vendor", b =>
                {
                    b.Navigation("Merchandise");

                    b.Navigation("VendorReviews");
                });

            modelBuilder.Entity("TheMerchShop.Models.Warehouse", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
